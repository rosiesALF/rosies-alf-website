import Link from "next/link"

const FacebookIcon = () => (
    <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clipPath="url(#clip0_21_650)">
<path d="M7.33337 10V14H10.3334V21H14.3334V14H17.3334L18.3334 10H14.3334V8C14.3334 7.73478 14.4387 7.48043 14.6263 7.29289C14.8138 7.10536 15.0682 7 15.3334 7H18.3334V3H15.3334C14.0073 3 12.7355 3.52678 11.7978 4.46447C10.8602 5.40215 10.3334 6.67392 10.3334 8V10H7.33337Z" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</g>
<defs>
<clipPath id="clip0_21_650">
<rect width="24" height="24" fill="white" transform="translate(0.333374)"/>
</clipPath>
</defs>
</svg>
)

const InstagramIcon = () => (
<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clipPath="url(#clip0_21_668)">
<path d="M4.33337 8C4.33337 6.93913 4.7548 5.92172 5.50495 5.17157C6.25509 4.42143 7.27251 4 8.33337 4H16.3334C17.3942 4 18.4117 4.42143 19.1618 5.17157C19.9119 5.92172 20.3334 6.93913 20.3334 8V16C20.3334 17.0609 19.9119 18.0783 19.1618 18.8284C18.4117 19.5786 17.3942 20 16.3334 20H8.33337C7.27251 20 6.25509 19.5786 5.50495 18.8284C4.7548 18.0783 4.33337 17.0609 4.33337 16V8Z" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
<path d="M9.33337 12C9.33337 12.7956 9.64944 13.5587 10.2121 14.1213C10.7747 14.6839 11.5377 15 12.3334 15C13.129 15 13.8921 14.6839 14.4547 14.1213C15.0173 13.5587 15.3334 12.7956 15.3334 12C15.3334 11.2044 15.0173 10.4413 14.4547 9.87868C13.8921 9.31607 13.129 9 12.3334 9C11.5377 9 10.7747 9.31607 10.2121 9.87868C9.64944 10.4413 9.33337 11.2044 9.33337 12Z" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
<path d="M16.8334 7.5V7.51" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</g>
<defs>
<clipPath id="clip0_21_668">
<rect width="24" height="24" fill="white" transform="translate(0.333374)"/>
</clipPath>
</defs>
</svg>
)

const TwitterIcon = () => (
    <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clipPath="url(#clip0_21_654)">
<path d="M4.33337 4L16.0664 20H20.3334L8.60037 4H4.33337Z" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
<path d="M4.33337 20L11.1014 13.232M13.5614 10.772L20.3334 4" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</g>
<defs>
<clipPath id="clip0_21_654">
<rect width="24" height="24" fill="white" transform="translate(0.333374)"/>
</clipPath>
</defs>
</svg>
)

const TikTokIcon = () => (
    <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clipPath="url(#clip0_21_659)">
<path d="M21.3334 7.917V11.951C19.5194 11.771 17.7898 11.0961 16.3334 10V14.5C16.3331 15.7211 15.9889 16.9175 15.3401 17.952C14.6913 18.9865 13.7642 19.8174 12.665 20.3493C11.5659 20.8813 10.3391 21.0929 9.12523 20.9599C7.91136 20.8268 6.75953 20.3545 5.80168 19.5971C4.84383 18.8397 4.11871 17.8278 3.7094 16.6773C3.30009 15.5268 3.22314 14.2843 3.48736 13.0921C3.75159 11.8999 4.3463 10.8062 5.20338 9.93642C6.06045 9.0666 7.14521 8.4558 8.33337 8.174V12.5C7.99246 12.7557 7.72257 13.0943 7.54931 13.4836C7.37606 13.8729 7.30521 14.3001 7.34348 14.7245C7.38175 15.1489 7.52787 15.5565 7.76797 15.9086C8.00808 16.2606 8.33419 16.5455 8.71534 16.7361C9.09649 16.9266 9.52003 17.0166 9.94575 16.9975C10.3715 16.9783 10.7852 16.8507 11.1477 16.6266C11.5102 16.4026 11.8094 16.0896 12.0169 15.7174C12.2244 15.3452 12.3334 14.9261 12.3334 14.5V3H16.4164C16.6246 4.2284 17.2097 5.36162 18.0907 6.24263C18.9718 7.12363 20.105 7.70878 21.3334 7.917Z" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</g>
<defs>
<clipPath id="clip0_21_659">
<rect width="24" height="24" fill="white" transform="translate(0.333374)"/>
</clipPath>
</defs>
</svg>
)

const YoutubeIcon = () => (
    <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clipPath="url(#clip0_21_663)">
<path d="M2.33337 8C2.33337 6.93913 2.7548 5.92172 3.50495 5.17157C4.25509 4.42143 5.27251 4 6.33337 4H18.3334C19.3942 4 20.4117 4.42143 21.1618 5.17157C21.9119 5.92172 22.3334 6.93913 22.3334 8V16C22.3334 17.0609 21.9119 18.0783 21.1618 18.8284C20.4117 19.5786 19.3942 20 18.3334 20H6.33337C5.27251 20 4.25509 19.5786 3.50495 18.8284C2.7548 18.0783 2.33337 17.0609 2.33337 16V8Z" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
<path d="M10.3334 9L15.3334 12L10.3334 15V9Z" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</g>
<defs>
<clipPath id="clip0_21_663">
<rect width="24" height="24" fill="white" transform="translate(0.333374)"/>
</clipPath>
</defs>
</svg>
)

const AddressIcon = () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clipPath="url(#clip0_21_677)">
<path d="M10.828 9.82788C11.3875 9.26852 11.7686 8.55579 11.9231 7.77983C12.0775 7.00387 11.9984 6.19954 11.6956 5.46857C11.3929 4.73759 10.8802 4.11281 10.2224 3.67323C9.56459 3.23365 8.79118 2.99902 8 2.99902C7.20883 2.99902 6.43542 3.23365 5.7776 3.67323C5.11977 4.11281 4.60708 4.73759 4.30437 5.46857C4.00165 6.19954 3.92251 7.00387 4.07695 7.77983C4.23139 8.55579 4.61247 9.26852 5.172 9.82788L8 12.6569L10.828 9.82788Z" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
<path d="M8 7V7.01" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
<path d="M18.828 17.8279C19.3875 17.2685 19.7686 16.5558 19.9231 15.7798C20.0775 15.0039 19.9983 14.1995 19.6956 13.4686C19.3929 12.7376 18.8802 12.1128 18.2224 11.6732C17.5646 11.2337 16.7912 10.999 16 10.999C15.2088 10.999 14.4354 11.2337 13.7776 11.6732C13.1198 12.1128 12.6071 12.7376 12.3044 13.4686C12.0017 14.1995 11.9225 15.0039 12.0769 15.7798C12.2314 16.5558 12.6125 17.2685 13.172 17.8279L16 20.6569L18.828 17.8279Z" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
<path d="M16 15V15.01" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</g>
<defs>
<clipPath id="clip0_21_677">
<rect width="24" height="24" fill="white"/>
</clipPath>
</defs>
</svg>
)

const PhoneIcon = () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clipPath="url(#clip0_21_684)">
<path d="M5 4H9L11 9L8.5 10.5C9.57096 12.6715 11.3285 14.429 13.5 15.5L15 13L20 15V19C20 19.5304 19.7893 20.0391 19.4142 20.4142C19.0391 20.7893 18.5304 21 18 21C14.0993 20.763 10.4202 19.1065 7.65683 16.3432C4.8935 13.5798 3.23705 9.90074 3 6C3 5.46957 3.21071 4.96086 3.58579 4.58579C3.96086 4.21071 4.46957 4 5 4Z" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</g>
<defs>
<clipPath id="clip0_21_684">
<rect width="24" height="24" fill="white"/>
</clipPath>
</defs>
</svg>
)

const MailIcon = () => (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clipPath="url(#clip0_21_688)">
<path d="M3 7C3 6.46957 3.21071 5.96086 3.58579 5.58579C3.96086 5.21071 4.46957 5 5 5H19C19.5304 5 20.0391 5.21071 20.4142 5.58579C20.7893 5.96086 21 6.46957 21 7V17C21 17.5304 20.7893 18.0391 20.4142 18.4142C20.0391 18.7893 19.5304 19 19 19H5C4.46957 19 3.96086 18.7893 3.58579 18.4142C3.21071 18.0391 3 17.5304 3 17V7Z" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
<path d="M3 7L12 13L21 7" stroke="#C6A960" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</g>
<defs>
<clipPath id="clip0_21_688">
<rect width="24" height="24" fill="white"/>
</clipPath>
</defs>
</svg>
)

const navLinks = [
    {
        label: 'About Us',
        href: '/about-us'
    },
    {
        label: 'Services',
        href: '/services'
    },
    // {
    //     label: 'Gallery',
    //     href: '/gallery'
    // },
]

const socialLinks = [
    {
        label: 'Facebook',
        href: '/about-us',
        icon: <FacebookIcon/>
    },
    {
        label: 'Instagram',
        href: '/services',
        icon: <InstagramIcon/>
    },
    {
        label: 'Twitter',
        href: '/gallery',
        icon: <TwitterIcon/>
    },
    {
        label: 'TikTok',
        href: '/gallery',
        icon: <TikTokIcon/>
    },
    {
        label: 'Youtube',
        href: '/gallery',
        icon: <YoutubeIcon/>
    },
]

const address = [
    {
        label: '5529 E. Bloomfield Rd., Scottsdale 85254',
        icon: <AddressIcon/>
    },
    {
        label: '+1 (562) 441-0288',
        icon: <PhoneIcon/>
    },
    {
        label: 'Info@rosiesalf.com',
        icon: <MailIcon/>
    }
]

function Logo() {
    return (
        <svg width="123" height="31" viewBox="0 0 123 31" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M115.007 9.4917C116.134 9.4917 117.108 9.61979 117.928 9.87597C118.747 10.1322 119.349 10.3755 119.734 10.6061C120.63 11.1697 121.168 10.811 121.348 9.53013H122.155C122.103 10.2731 122.065 11.1697 122.039 12.22C122.014 13.2448 122.001 14.6281 122.001 16.3702H121.194C121.091 15.4223 120.861 14.4872 120.502 13.565C120.169 12.6427 119.67 11.887 119.004 11.2978C118.337 10.6829 117.466 10.3755 116.391 10.3755C115.699 10.3755 115.11 10.5805 114.623 10.9904C114.162 11.4003 113.931 11.9639 113.931 12.6812C113.931 13.4497 114.162 14.1286 114.623 14.7178C115.084 15.307 115.673 15.8706 116.391 16.4086C117.133 16.9466 117.876 17.523 118.619 18.1378C119.439 18.7527 120.169 19.3803 120.81 20.0208C121.476 20.6356 122.001 21.3145 122.385 22.0574C122.795 22.7747 123 23.6457 123 24.6705C123 25.8233 122.654 26.8352 121.962 27.7062C121.271 28.5772 120.361 29.2561 119.234 29.7429C118.107 30.2296 116.852 30.473 115.468 30.473C114.623 30.473 113.88 30.3833 113.239 30.204C112.625 30.0503 112.112 29.8453 111.702 29.5892C111.318 29.4098 110.972 29.2561 110.665 29.128C110.383 28.9999 110.101 28.9103 109.819 28.859C109.563 28.8334 109.346 28.9487 109.166 29.2049C108.987 29.4611 108.846 29.7941 108.743 30.204H107.937C107.988 29.3842 108.026 28.3851 108.052 27.2067C108.077 26.0282 108.09 24.4655 108.09 22.5185H108.897C109.051 23.9019 109.333 25.1188 109.743 26.1691C110.178 27.2195 110.755 28.0521 111.472 28.6669C112.189 29.2561 113.035 29.5507 114.008 29.5507C114.444 29.5507 114.841 29.4739 115.199 29.3202C115.584 29.1408 115.891 28.8719 116.122 28.5132C116.378 28.1545 116.506 27.6934 116.506 27.1298C116.506 26.0026 116.147 25.0676 115.43 24.3246C114.713 23.5561 113.829 22.7235 112.778 21.8269C111.959 21.1352 111.19 20.4563 110.473 19.7902C109.781 19.1241 109.205 18.394 108.743 17.5999C108.308 16.8057 108.09 15.9091 108.09 14.9099C108.09 13.7571 108.41 12.7836 109.051 11.9895C109.717 11.1697 110.575 10.5549 111.626 10.145C112.676 9.70945 113.803 9.4917 115.007 9.4917Z" fill="#0A1F44"/>
        <path d="M101.514 2.19043C102.154 2.19043 102.718 2.31852 103.205 2.5747C103.717 2.80527 104.114 3.1383 104.396 3.57381C104.678 3.93247 104.895 4.41921 105.049 5.03405C105.228 5.64889 105.318 6.30215 105.318 6.99384C105.318 8.27475 104.985 9.4788 104.319 10.606C103.653 11.7076 102.628 12.5786 101.245 13.2191L100.899 12.5274C101.591 12.2199 102.205 11.7716 102.743 11.1824C103.307 10.5676 103.653 9.92712 103.781 9.26105C103.986 8.62059 104.012 8.00576 103.858 7.41654C103.243 8.10823 102.398 8.45408 101.322 8.45408C100.374 8.45408 99.6052 8.18508 99.016 7.6471C98.4268 7.0835 98.1322 6.30215 98.1322 5.30304C98.1322 4.38078 98.4396 3.63786 99.0544 3.07426C99.6949 2.48504 100.515 2.19043 101.514 2.19043Z" fill="#0A1F44"/>
        <path d="M89.1669 9.4917C91.4213 9.4917 93.189 10.1578 94.4699 11.4899C95.7508 12.8221 96.3912 15.0124 96.3912 18.061H84.0561L84.0177 17.3309H91.1651C91.2164 16.0756 91.1651 14.9228 91.0114 13.8724C90.8577 12.7964 90.6015 11.9382 90.2429 11.2978C89.9098 10.6573 89.4615 10.3371 88.8979 10.3371C88.1294 10.3371 87.4761 10.8879 86.9381 11.9895C86.4001 13.0911 86.0671 14.9612 85.939 17.5999L86.0927 17.8688C86.0415 18.1506 86.0159 18.4453 86.0159 18.7527C86.0159 19.0345 86.0159 19.3419 86.0159 19.6749C86.0159 21.4426 86.2464 22.8516 86.7076 23.9019C87.1943 24.9523 87.7963 25.6952 88.5136 26.1307C89.231 26.5662 89.9739 26.784 90.7424 26.784C91.1779 26.784 91.6647 26.7199 92.2027 26.5918C92.7406 26.4637 93.3042 26.1948 93.8935 25.7849C94.4827 25.375 95.0463 24.7729 95.5843 23.9788L96.2375 24.2093C95.9557 25.2085 95.469 26.1948 94.7773 27.1682C94.1112 28.1161 93.253 28.9103 92.2027 29.5507C91.1523 30.1656 89.8842 30.473 88.3984 30.473C86.7076 30.473 85.1961 30.1271 83.8639 29.4355C82.5318 28.7181 81.4686 27.6038 80.6745 26.0923C79.9059 24.5552 79.5217 22.557 79.5217 20.0976C79.5217 17.6639 79.9444 15.6657 80.7898 14.103C81.6352 12.5403 82.788 11.3874 84.2482 10.6445C85.7085 9.87597 87.348 9.4917 89.1669 9.4917Z" fill="#0A1F44"/>
        <path d="M71.8269 0C73.031 0 73.966 0.268991 74.6321 0.806974C75.3238 1.34495 75.6696 2.12631 75.6696 3.15104C75.6696 4.17576 75.3238 4.95712 74.6321 5.4951C73.966 6.03308 73.031 6.30207 71.8269 6.30207C70.6228 6.30207 69.675 6.03308 68.9833 5.4951C68.3172 4.95712 67.9842 4.17576 67.9842 3.15104C67.9842 2.12631 68.3172 1.34495 68.9833 0.806974C69.675 0.268991 70.6228 0 71.8269 0ZM75.2085 9.60682V26.3611C75.2085 27.4371 75.375 28.1672 75.7081 28.5515C76.0667 28.9357 76.6687 29.1279 77.5141 29.1279V29.9348C77.0018 29.9092 76.246 29.8836 75.2469 29.858C74.2478 29.8068 73.2359 29.7811 72.2112 29.7811C71.1864 29.7811 70.1361 29.8068 69.0601 29.858C68.0098 29.8836 67.2156 29.9092 66.6776 29.9348V29.1279C67.523 29.1279 68.1123 28.9357 68.4453 28.5515C68.8039 28.1672 68.9833 27.4371 68.9833 26.3611V14.2181C68.9833 13.0653 68.8168 12.2199 68.4837 11.6819C68.1507 11.1183 67.5487 10.8365 66.6776 10.8365V10.0295C67.4974 10.1064 68.2916 10.1448 69.0601 10.1448C70.213 10.1448 71.3017 10.1064 72.3265 10.0295C73.3768 9.92705 74.3375 9.78615 75.2085 9.60682Z" fill="#0A1F44"/>
        <path d="M56.5406 9.4917C57.6678 9.4917 58.6413 9.61979 59.4611 9.87597C60.2809 10.1322 60.8829 10.3755 61.2672 10.6061C62.1638 11.1697 62.7018 10.811 62.8811 9.53013H63.6881C63.6369 10.2731 63.5984 11.1697 63.5728 12.22C63.5472 13.2448 63.5344 14.6281 63.5344 16.3702H62.7274C62.625 15.4223 62.3944 14.4872 62.0357 13.565C61.7027 12.6427 61.2031 11.887 60.5371 11.2978C59.871 10.6829 59 10.3755 57.924 10.3755C57.2323 10.3755 56.6431 10.5805 56.1564 10.9904C55.6952 11.4003 55.4647 11.9639 55.4647 12.6812C55.4647 13.4497 55.6952 14.1286 56.1564 14.7178C56.6175 15.307 57.2067 15.8706 57.924 16.4086C58.6669 16.9466 59.4099 17.523 60.1528 18.1378C60.9726 18.7527 61.7027 19.3803 62.3432 20.0208C63.0092 20.6356 63.5344 21.3145 63.9187 22.0574C64.3286 22.7747 64.5335 23.6457 64.5335 24.6705C64.5335 25.8233 64.1877 26.8352 63.496 27.7062C62.8043 28.5772 61.8948 29.2561 60.7676 29.7429C59.6404 30.2296 58.3851 30.473 57.0018 30.473C56.1564 30.473 55.4134 30.3833 54.773 30.204C54.1581 30.0503 53.6458 29.8453 53.2359 29.5892C52.8516 29.4098 52.5058 29.2561 52.1984 29.128C51.9166 28.9999 51.6348 28.9103 51.353 28.859C51.0968 28.8334 50.879 28.9487 50.6997 29.2049C50.5204 29.4611 50.3795 29.7941 50.277 30.204H49.47C49.5213 29.3842 49.5597 28.3851 49.5853 27.2067C49.6109 26.0282 49.6237 24.4655 49.6237 22.5185H50.4307C50.5844 23.9019 50.8662 25.1188 51.2761 26.1691C51.7116 27.2195 52.288 28.0521 53.0053 28.6669C53.7226 29.2561 54.568 29.5507 55.5415 29.5507C55.977 29.5507 56.3741 29.4739 56.7328 29.3202C57.117 29.1408 57.4245 28.8719 57.655 28.5132C57.9112 28.1545 58.0393 27.6934 58.0393 27.1298C58.0393 26.0026 57.6806 25.0676 56.9633 24.3246C56.246 23.5561 55.3622 22.7235 54.3119 21.8269C53.4921 21.1352 52.7235 20.4563 52.0062 19.7902C51.3145 19.1241 50.7381 18.394 50.277 17.5999C49.8415 16.8057 49.6237 15.9091 49.6237 14.9099C49.6237 13.7571 49.944 12.7836 50.5844 11.9895C51.2505 11.1697 52.1087 10.5549 53.159 10.145C54.2094 9.70945 55.3366 9.4917 56.5406 9.4917Z" fill="#0A1F44"/>
        <path d="M36.8923 9.4917C38.8137 9.4917 40.4917 9.83754 41.9263 10.5292C43.3865 11.1953 44.5137 12.2969 45.3079 13.834C46.1277 15.3711 46.5376 17.4205 46.5376 19.9823C46.5376 22.5442 46.1277 24.5936 45.3079 26.1307C44.5137 27.6678 43.3865 28.7822 41.9263 29.4739C40.4917 30.14 38.8137 30.473 36.8923 30.473C34.9966 30.473 33.3186 30.14 31.8583 29.4739C30.4237 28.7822 29.2965 27.6678 28.4767 26.1307C27.657 24.5936 27.2471 22.5442 27.2471 19.9823C27.2471 17.4205 27.657 15.3711 28.4767 13.834C29.2965 12.2969 30.4237 11.1953 31.8583 10.5292C33.3186 9.83754 34.9966 9.4917 36.8923 9.4917ZM36.8923 10.2602C35.9957 10.2602 35.2399 11.0288 34.6251 12.5659C34.0359 14.0774 33.7413 16.5495 33.7413 19.9823C33.7413 23.4152 34.0359 25.9001 34.6251 27.4372C35.2399 28.9487 35.9957 29.7044 36.8923 29.7044C37.8146 29.7044 38.5703 28.9487 39.1595 27.4372C39.7487 25.9001 40.0434 23.4152 40.0434 19.9823C40.0434 16.5495 39.7487 14.0774 39.1595 12.5659C38.5703 11.0288 37.8146 10.2602 36.8923 10.2602Z" fill="#0A1F44"/>
        <path d="M0 2.72852C0.691691 2.75413 1.61395 2.77975 2.76676 2.80537C3.91958 2.83099 5.0724 2.8438 6.22522 2.8438C7.48051 2.8438 8.68456 2.83099 9.83738 2.80537C11.0158 2.77975 11.8484 2.76694 12.3352 2.76694C14.8457 2.76694 16.908 3.02312 18.5219 3.53549C20.1615 4.04785 21.3912 4.80359 22.211 5.8027C23.0307 6.77619 23.4406 7.99305 23.4406 9.45329C23.4406 10.3755 23.2485 11.285 22.8642 12.1816C22.5056 13.0526 21.8779 13.8596 20.9813 14.6025C20.1103 15.3455 18.8934 15.9347 17.3307 16.3702C15.7936 16.8057 13.8466 17.0235 11.4898 17.0235H7.80074V16.2549H11.1055C12.5145 16.2549 13.5776 15.9731 14.2949 15.4095C15.0379 14.8203 15.5374 14.0518 15.7936 13.1039C16.0754 12.1304 16.2163 11.0544 16.2163 9.87599C16.2163 7.85215 15.8961 6.28944 15.2556 5.18786C14.6152 4.06066 13.5264 3.49706 11.9893 3.49706C11.0414 3.49706 10.4266 3.71482 10.1448 4.15033C9.88862 4.58583 9.76053 5.46966 9.76053 6.8018V25.8617C9.76053 26.784 9.82457 27.4757 9.95266 27.9368C10.1064 28.3979 10.3754 28.7054 10.7596 28.8591C11.1695 29.0128 11.7716 29.1152 12.5657 29.1665V29.935C11.8484 29.8838 10.9262 29.8582 9.79895 29.8582C8.69737 29.8326 7.58298 29.8197 6.45578 29.8197C5.14925 29.8197 3.91958 29.8326 2.76676 29.8582C1.61395 29.8582 0.691691 29.8838 0 29.935V29.1665C0.794164 29.1152 1.38338 29.0128 1.76765 28.8591C2.17755 28.7054 2.44654 28.3979 2.57463 27.9368C2.72834 27.4757 2.80519 26.784 2.80519 25.8617V6.8018C2.80519 5.85393 2.72834 5.16224 2.57463 4.72673C2.44654 4.26561 2.17755 3.95819 1.76765 3.80448C1.38338 3.62515 0.794164 3.52268 0 3.49706V2.72852ZM7.64703 16.3702C8.64614 16.3958 9.55558 16.4471 10.3754 16.5239C11.1951 16.6008 11.9253 16.6776 12.5657 16.7545C13.2318 16.8057 13.8082 16.8441 14.2949 16.8698C16.8311 17.0235 18.7141 17.5102 19.9438 18.33C21.199 19.1242 21.9932 20.3154 22.3262 21.9037L23.1332 25.9002C23.3638 26.8737 23.6072 27.5653 23.8633 27.9752C24.1195 28.3595 24.4782 28.5388 24.9393 28.5132C25.2211 28.5132 25.4645 28.462 25.6694 28.3595C25.8744 28.2314 26.0793 28.0521 26.2843 27.8215L26.8222 28.3211C26.0793 29.1152 25.2723 29.666 24.4013 29.9735C23.5303 30.3065 22.5184 30.473 21.3656 30.473C19.8541 30.473 18.6116 30.1784 17.6381 29.5892C16.6902 29 16.0882 27.9112 15.832 26.3229L15.1788 22.4801C15.0251 21.4298 14.8201 20.4947 14.5639 19.6749C14.3334 18.8552 14.0131 18.2147 13.6033 17.7536C13.1934 17.2668 12.617 17.0235 11.874 17.0235H7.72388L7.64703 16.3702Z" fill="#0A1F44"/>
        </svg>
    )
}
export default function Footer() {
    return (
        <footer className="border-t border-navyBlue/20 mt-12 text-base text-navyBlue font-lato">
            <div className='mx-auto max-w-[1800px] px-7 md:px-[112px] py-4 md:py-[72px] flex flex-col md:flex-row justify-evenly md:justify-between md:gap-8 flex-wrap gap-y-12'>
                <article className="max-w-sm">
                    <Logo/> <br />
                    <p>At Rosie’s Assisted Living, we provide compassionate care in a home-like environment. Contact us today to learn how we can support your loved one’s journey.</p>
                </article>

                <article className="flex flex-col gap-6">
                    {
                        navLinks.map(({href, label}) => (
                            <Link className="hover:underline" key={label} href={href}>{label}</Link>
                        ))
                    }
                </article>

                <article className="flex flex-col gap-6">
                    {
                        socialLinks.map(({href, label, icon}) => (
                            <Link className="hover:underline flex items-center gap-2" key={label} href={href}>
                                <span>{icon}</span>
                                {label}
                            </Link>
                        ))
                    }
                </article>

                <article className="flex flex-col gap-6">
                    {
                        address.map(({label, icon}) => (
                            <p className="flex items-center gap-2" key={label}>
                                <span>{icon}</span>
                                {label}
                            </p>
                        ))
                    }
                </article>
            </div>
        </footer>
    )
}